dialog {
  border: none;
  outline: none;
  max-height: (100% - 4rem);
  min-height: 50%;
  min-width: 50%;
  max-width: (100% - 2rem);
  border-radius: 0.5rem;
  cursor: auto;
  padding: .8rem;
}

.header {
  padding: 1rem 0;
  display: flex;
  position: relative;
}

.close-button {
  font-size: 1.5rem;
  position: absolute;
  right: 1rem;
  cursor: pointer;
}

.body {
  padding: .8rem;
}


/*   Open state of the dialog  */
dialog[open] {
  opacity: 1;
  transform: scale(1);
}

/*   Closed state of the dialog   */
dialog {
  opacity: 0;
  transform: scale(0);
  transition:
    opacity 0.1s ease-out,
    transform 0.1s ease-out,
    overlay 0.1s ease-out allow-discrete,
    display 0.1s ease-out allow-discrete;
  /* Equivalent to
  transition: all 0.7s allow-discrete; */
}

/*   Before-open state  */
/* Needs to be after the previous dialog[open] rule to take effect,
    as the specificity is the same */
@starting-style {
  dialog[open] {
    opacity: 0;
    transform: scale(0);
  }
}

/* Transition the :backdrop when the dialog modal is promoted to the top layer */
dialog::backdrop {
  background-color: rgb(0 0 0 / 0%);
  transition:
    display 0.7s allow-discrete,
    overlay 0.7s allow-discrete,
    background-color 0.7s;
  /* Equivalent to
  transition: all 0.7s allow-discrete; */
}

dialog[open]::backdrop {
  background-color: rgb(0 0 0 / 25%);
}

/* This starting-style rule cannot be nested inside the above selector
because the nesting selector cannot represent pseudo-elements. */

@starting-style {
  dialog[open]::backdrop {
    background-color: rgb(0 0 0 / 0%);
  }
}
